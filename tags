add_last_cmd	srcs/parser/parsing_utils.c	/^void	add_last_cmd(t_cmd **cmd, t_list **cmd_lst, i/
add_path_slash	srcs/command/get_path.c	/^static void	add_path_slash(char **path)$/
assign_fd	srcs/piping/plug_pipes.c	/^static t_io	assign_fd(t_io io_struct)$/
cd	srcs/builtins/directory.c	/^int	cd(t_cmd *cmd, char *home_path)$/
check_pipe	srcs/lexer/check_token.c	/^static bool	check_pipe(t_token *current, t_token */
check_quote_and_forbiden_char	srcs/utils/buffer_checks.c	/^int	check_quote_and_forbiden_char(char *buffer)$/
check_redirect	srcs/lexer/check_token.c	/^static bool	check_redirect(t_token *current, t_tok/
check_token	srcs/lexer/check_token.c	/^int	check_token(t_list *token_lst)$/
clear_cmd_struct	srcs/utils/clear.c	/^void	clear_cmd_struct(void *cmd_struct)$/
clear_prg_struct	srcs/utils/clear.c	/^void	clear_prg_struct(void)$/
clear_token_struct	srcs/utils/clear.c	/^void	clear_token_struct(void *token_struct)$/
clear_var_struct	srcs/utils/clear.c	/^void	clear_var_struct(void *var_struct)$/
delete_variable	srcs/builtins/var.c	/^void	delete_variable(t_list *env_lst, char *del)$/
do_nothing	srcs/builtins/colons.c	/^int	do_nothing(void)$/
echo	srcs/builtins/echo.c	/^int	echo(t_cmd *cmd)$/
execute	srcs/execution/execute.c	/^int	execute(t_cmd *cmd)$/
execute_builtin	srcs/execution/execute.c	/^int	execute_builtin(t_cmd *cmd)$/
execute_command	srcs/execution/execute.c	/^int	execute_command(t_cmd *cmd)$/
exit_failure	srcs/utils/exit.c	/^void	exit_failure(char *item_name, char *error_msg/
exit_shell	srcs/builtins/exit_shell.c	/^int	exit_shell(t_cmd *cmd, char *exit_str)$/
exit_success	srcs/utils/exit.c	/^void	exit_success(int status, bool display)$/
expand	srcs/lexer/handle_quote.c	/^static int	expand(char **cmd_buffer, char *buffer,/
export	srcs/builtins/var.c	/^int	export(t_cmd *cmd, t_list *env_lst)$/
free_tab	srcs/utils/free.c	/^void	free_tab(char **tab)$/
ft_charlen	srcs/utils/utils_2.c	/^int	ft_charlen(char **tab)$/
ft_close	srcs/utils/utils.c	/^void	ft_close(int *fd)$/
ft_envlst_add_back	srcs/utils/lst_utils.c	/^void	ft_envlst_add_back(t_list **alst, t_list *new/
ft_exit	srcs/utils/exit.c	/^void	ft_exit(int status, bool display)$/
ft_getenv	srcs/variables/environment.c	/^char	*ft_getenv(t_list *env_lst, char *var_search)/
ft_lstsearch	srcs/utils/lst_utils.c	/^t_list	*ft_lstsearch(t_list *lst, char *search)$/
ft_onlychr	srcs/utils/utils_3.c	/^int	ft_onlychr(char *str, char c)$/
get_cmd_path	srcs/command/command.c	/^char	*get_cmd_path(char **path, char *cmd)$/
get_path	srcs/command/get_path.c	/^char	**get_path(void)$/
get_token	srcs/lexer/get_tokens.c	/^t_list	*get_token(char *cmd_buffer)$/
get_token_type	srcs/lexer/get_tokens.c	/^t_ttype	get_token_type(char *token)$/
handle_expansion	srcs/lexer/handle_expansion.c	/^char	*handle_expansion(t_prg *g_prg, char **cmd_bu/
handle_heredoc	srcs/parser/handle_heredoc.c	/^int	handle_heredoc(t_list **token_lst, t_cmd **cmd/
handle_pipe_and_redirection	srcs/lexer/handle_operators.c	/^int	handle_pipe_and_redirection(char **cmd_buffer,/
handle_quote	srcs/lexer/handle_quote.c	/^char	*handle_quote(t_list **token_lst, char **cmd_/
heredoc_sigint	srcs/parser/parser.c	/^static void	*heredoc_sigint(t_list **cmd_lst)$/
idx_pid_max	srcs/utils/wait_utils.c	/^int	idx_pid_max(t_exit *exit_struct, int len)$/
init	srcs/lexer/get_tokens.c	/^static char	*init(int *i, t_list **token_lst, char/
init_cmd_struct	srcs/parser/parser.c	/^t_cmd	*init_cmd_struct(int args_num, bool is_first/
init_env	srcs/variables/environment.c	/^t_list	*init_env(void)$/
init_io_struct	srcs/piping/plug_pipes.c	/^t_io	init_io_struct(void)$/
init_vars	srcs/lexer/handle_quote.c	/^static void	init_vars(char **cmd_buffer, int *i, c/
is_builtin	srcs/utils/utils.c	/^int	is_builtin(char *cmd_name)$/
is_eof_delimiter	srcs/parser/handle_heredoc.c	/^static int	is_eof_delimiter(char *line, char *deli/
is_line_empty	srcs/utils/utils.c	/^int	is_line_empty(char *line)$/
is_nflag	srcs/builtins/echo.c	/^static bool	is_nflag(char *s)$/
is_pipe	srcs/utils/utils_2.c	/^int	is_pipe(char c)$/
is_redirect	srcs/utils/utils_2.c	/^int	is_redirect(char c)$/
is_redirect_token	srcs/parser/parser.c	/^static int	is_redirect_token(t_ttype token_type)$/
is_space	srcs/utils/utils_2.c	/^int	is_space(char c)$/
is_token_in_list	srcs/parser/parsing_utils.c	/^int	is_token_in_list(t_list *token_lst, t_ttype ty/
lex_chars	srcs/lexer/expansion.c	/^int	lex_chars(int i, char **cmd_buffer, char **buf/
lex_expansion	srcs/lexer/expansion.c	/^int	lex_expansion(t_list **token_lst, char **cmd_b/
lex_operators	srcs/lexer/expansion.c	/^int	lex_operators(t_list **token_lst, char **cmd_b/
lex_quotes	srcs/lexer/expansion.c	/^int	lex_quotes(t_list **token_lst, char **cmd_buff/
lex_spaces	srcs/lexer/expansion.c	/^int	lex_spaces(t_list **token_lst, char **cmd_buff/
max_token_size_reached	srcs/lexer/get_tokens.c	/^static void	*max_token_size_reached(t_list **token/
need_to_expand	srcs/lexer/handle_quote.c	/^int	need_to_expand(char **cmd_buffer, char quote)$/
parse_argument	srcs/parser/parsing_utils.c	/^void	parse_argument(t_list **token_lst, t_cmd **cm/
parse_heredoc	srcs/parser/parsing_utils.c	/^void	parse_heredoc(t_list **token_lst, t_cmd **cmd/
parse_pipe	srcs/parser/parsing_utils.c	/^void	parse_pipe(t_list **token_lst, t_cmd **cmd, t/
parse_redirection	srcs/parser/handle_redirection.c	/^int	parse_redirection(t_list **token_lst, t_cmd **/
parse_tokens	srcs/parser/parser.c	/^t_list	*parse_tokens(t_list *token_lst)$/
perform_expansion	srcs/lexer/handle_expansion.c	/^char	*perform_expansion(t_prg *g_prg, t_list *env_/
print_cmd_lst	srcs/utils/debug.c	/^void	print_cmd_lst(t_list *cmd_lst)$/
print_env	srcs/builtins/var.c	/^int	print_env(t_list *env_lst, char *str)$/
print_tab	srcs/utils/debug.c	/^void	print_tab(char **tab)$/
print_token	srcs/utils/debug.c	/^void	print_token(t_list *list)$/
puterror	srcs/utils/exit.c	/^int	puterror(char *item_name, char *error_msg, int/
pwd	srcs/builtins/directory.c	/^int	pwd(t_cmd *cmd)$/
quotes_expansion	srcs/lexer/handle_quote.c	/^static char	*quotes_expansion(t_prg *g_prg, t_list/
redirect_heredoc	srcs/parser/handle_heredoc.c	/^static int	redirect_heredoc(t_list **token_lst, t_/
redirect_input	srcs/parser/handle_redirection.c	/^static int	redirect_input(t_list **token_lst, t_cm/
redirect_output	srcs/parser/handle_redirection.c	/^static int	redirect_output(t_list **token_lst, t_c/
replace_cmd_io_and_exec	srcs/execution/set_io_exec.c	/^t_io	replace_cmd_io_and_exec(t_list **cmd_lst, t_i/
reset_cmd_and_jump_to_next	srcs/parser/handle_redirection.c	/^void	reset_cmd_and_jump_to_next(t_cmd **cmd, int */
restore_and_close_fds	srcs/piping/plug_pipes.c	/^void	restore_and_close_fds(t_io io_struct)$/
search_in_tab	srcs/command/command.c	/^char	*search_in_tab(char **env, char *var)$/
set_and_execute_command	srcs/execution/set_io_exec.c	/^t_io	set_and_execute_command(t_list **cmd_lst, t_i/
set_exit_struct	srcs/utils/wait_utils.c	/^t_exit	*set_exit_struct(void)$/
set_fd_last_cmd	srcs/piping/plug_pipes.c	/^t_io	set_fd_last_cmd(t_list **cmd_lst, t_io io_str/
set_fds	srcs/piping/plug_pipes.c	/^t_io	set_fds(t_list **cmd_lst, t_io io_struct, int/
set_file_descriptors	srcs/execution/set_io_exec.c	/^t_io	set_file_descriptors(t_list **cmd_lst, t_io i/
sig_int	srcs/utils/signal.c	/^void	sig_int(int sig __attribute__((unused)))$/
sig_int_heredoc	srcs/parser/handle_heredoc.c	/^static int	sig_int_heredoc(char *line, int fds[2])/
sig_quit	srcs/utils/signal.c	/^void	sig_quit(int sig __attribute__((unused)))$/
skip_spaces	srcs/utils/utils_2.c	/^void	skip_spaces(char **str)$/
split_buffer_and_add_back	srcs/lexer/handle_expansion.c	/^static void	split_buffer_and_add_back(char **buffe/
syntax_error	srcs/lexer/check_token.c	/^static int	syntax_error(t_token *unexpected_token)/
treat_error_msg	srcs/utils/exit.c	/^char	*treat_error_msg(char *str)$/
unset	srcs/builtins/var.c	/^int	unset(t_cmd *cmd, t_list *env_lst)$/
wait_all_pids	srcs/utils/wait_utils.c	/^void	wait_all_pids(void)$/
wait_pid	srcs/utils/wait_utils.c	/^int	wait_pid(pid_t pid)$/
watch_signals	srcs/utils/signal.c	/^void	watch_signals(void)$/
write_command	srcs/command/command.c	/^char	*write_command(char **cmd)$/
write_forbidden_char_error	srcs/utils/buffer_checks.c	/^static int	write_forbidden_char_error(char fchar)$/
write_token	srcs/lexer/get_tokens.c	/^t_token	*write_token(char *token)$/
write_unclosed_quote_error	srcs/utils/buffer_checks.c	/^static int	write_unclosed_quote_error(char quote)$/
write_variable	srcs/variables/environment.c	/^t_variable	*write_variable(char *var)$/
xxmalloc	srcs/utils/utils.c	/^void	*xxmalloc(size_t size)$/
